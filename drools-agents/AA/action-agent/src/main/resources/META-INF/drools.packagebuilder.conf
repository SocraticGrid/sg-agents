 ###############################################################################
 #
 # Copyright (C) 2012 by Cognitive Medical Systems, Inc (http://www.cognitivemedciine.com)
 #
 # Licensed under the Apache License, Version 2.0 (the "License"); you may not 
 # use this file except in compliance with the License. You may obtain a copy of 
 # the License at
 #
 #     http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software distributed 
 # under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
 # CONDITIONS OF ANY KIND, either express or implied. See the License for the
 # specific language governing permissions and limitations under the License.
 #
 ###############################################################################
 
 ###############################################################################
 # Socratic Grid contains components to which third party terms apply. To comply 
 # with these terms, the following notice is provided:
 #
 # TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 # Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect. All 
 # rights reserved.
 # Redistribution and use in source and binary forms, with or without 
 # modification, are permitted provided that the following conditions are met:
 # 
 # - Redistributions of source code must retain the above copyright notice, this 
 #   list of conditions and the following disclaimer.
 # - Redistributions in binary form must reproduce the above copyright notice, 
 #   this list of conditions and the following disclaimer in the documentation 
 #   and/or other materials provided with the distribution.
 # - Neither the name of the NHIN Connect Project nor the names of its 
 #   contributors may be used to endorse or promote products derived from this 
 #   software without specific prior written permission.
 # 
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 # AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 # IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 # ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 # LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 # CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 # SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 # INTERRUPTION HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 # CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 # ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 # POSSIBILITY OF SUCH DAMAGE.
 # 
 # END OF TERMS AND CONDITIONS
 #
 ###############################################################################

drools.dialect.default = java
drools.dialect.java = org.drools.rule.builder.dialect.java.JavaDialectConfiguration
drools.dialect.java.compiler = ECLIPSE

drools.dialect.mvel = org.drools.rule.builder.dialect.mvel.MVELDialectConfiguration
drools.dialect.mvel.strict = true
drools.dialect.mvel.langLevel = 4

drools.accumulate.function.average = org.drools.base.accumulators.AverageAccumulateFunction
drools.accumulate.function.max = org.drools.base.accumulators.MaxAccumulateFunction
drools.accumulate.function.min = org.drools.base.accumulators.MinAccumulateFunction
drools.accumulate.function.count = org.drools.base.accumulators.CountAccumulateFunction
drools.accumulate.function.sum = org.drools.base.accumulators.SumAccumulateFunction
drools.accumulate.function.collectList = org.drools.base.accumulators.CollectListAccumulateFunction
drools.accumulate.function.collectSet = org.drools.base.accumulators.CollectSetAccumulateFunction

drools.evaluator.coincides = org.drools.base.evaluators.CoincidesEvaluatorDefinition
drools.evaluator.before = org.drools.base.evaluators.BeforeEvaluatorDefinition
drools.evaluator.after = org.drools.base.evaluators.AfterEvaluatorDefinition
drools.evaluator.meets = org.drools.base.evaluators.MeetsEvaluatorDefinition
drools.evaluator.metby = org.drools.base.evaluators.MetByEvaluatorDefinition
drools.evaluator.overlaps = org.drools.base.evaluators.OverlapsEvaluatorDefinition
drools.evaluator.overlappedby = org.drools.base.evaluators.OverlappedByEvaluatorDefinition
drools.evaluator.during = org.drools.base.evaluators.DuringEvaluatorDefinition
drools.evaluator.includes = org.drools.base.evaluators.IncludesEvaluatorDefinition
drools.evaluator.starts = org.drools.base.evaluators.StartsEvaluatorDefinition
drools.evaluator.startedby = org.drools.base.evaluators.StartedByEvaluatorDefinition
drools.evaluator.finishes = org.drools.base.evaluators.FinishesEvaluatorDefinition
drools.evaluator.finishedby = org.drools.base.evaluators.FinishedByEvaluatorDefinition
drools.evaluator.set = org.drools.base.evaluators.SetEvaluatorsDefinition
drools.evaluator.matches = org.drools.base.evaluators.MatchesEvaluatorsDefinition
drools.evaluator.soundslike = org.drools.base.evaluators.SoundslikeEvaluatorsDefinition