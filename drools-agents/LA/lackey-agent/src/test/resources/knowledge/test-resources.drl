/*******************************************************************************
 *
 * Copyright (C) 2012 by Cognitive Medical Systems, Inc (http://www.cognitivemedciine.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not 
 * use this file except in compliance with the License. You may obtain a copy of 
 * the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed 
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 ******************************************************************************/
 
 /******************************************************************************
 * Socratic Grid contains components to which third party terms apply. To comply 
 * with these terms, the following notice is provided:
 *
 * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect. All 
 * rights reserved.
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 * 
 * - Redistributions of source code must retain the above copyright notice, this 
 *   list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice, 
 *   this list of conditions and the following disclaimer in the documentation 
 *   and/or other materials provided with the distribution.
 * - Neither the name of the NHIN Connect Project nor the names of its 
 *   contributors may be used to endorse or promote products derived from this 
 *   software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * END OF TERMS AND CONDITIONS
 *
 ******************************************************************************/

package org.drools.mas;

import org.drools.mas.body.content.*;
import org.drools.mas.action.message.*;
import org.drools.mas.action.message.types.*;
import org.drools.mas.action.message.invokers.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;
import org.drools.mas.AgentID;
import org.drools.mas.action.helpers.*;
import org.drools.mas.util.helper.*;
import org.drools.mas.util.ResourceDescriptor;
import org.drools.mas.util.ResourceDescriptorImpl;
import org.drools.mas.util.MessageContentEncoder;
import org.drools.mas.helpers.DialogueHelper;
import org.socraticgrid.guvnorassetsscanner.ScannerTask;
import org.socraticgrid.guvnorassetsscanner.ScannerTaskFactory;
import org.socraticgrid.guvnorassetsscanner.io.URLResourceReaderStrategy;
import org.socraticgrid.guvnorassetsscanner.io.URLResourceReaderStrategy;

import org.socraticgrid.lackey.fact.EndpointsConfiguration;

import java.net.URL;


declare AgentNotified
    aid : String
    resourceId : String
end


/*
This rule inserts a AgentNotified even if no real agent was actually notified.
*/
rule "[TEST] Notify Changed Resources"
    when
        $rd: ResourceDescriptorImpl($id: id)
        $aid: AgentID($name: name)
        EndpointsConfiguration(agentEndpoints[$aid.name] == null)
    then
        // Notify Agent
        System.out.println(">>>>>>>>>>>>>>>[TEST] notifying the agent = "+$name +" - rd"+$rd );
        
        // Insert AgentNotfied
        insert(new AgentNotified($name, $id));

end

query forceInform( String $agentId, String $resourceId,
                      String $return )
       $ret: AgentNotified( $agentId, $resourceId; )
       $return:= String() from MessageContentEncoder.encode($ret, Encodings.XML);
end


rule " inform collector - forceInform"
    when
        $s : SessionLocator($sessionId: sessionId, mind == true)
        $action: Action( $msgId: msgId, actionName == "forceInform",
                         $desc      : this["descriptor"],
                         $aid      : this["agentID"]
                       )
        forceInform( $aid, $desc, $return; )
    then
        System.out.println(" >>>>>>>>>>>>>>>>> agent notified "+$return);
        ResponseContent.deliverResponse($sessionId, $msgId, $return, null);
        retract( $action );
end
